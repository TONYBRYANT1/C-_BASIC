#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
//判断该机器的字节序:
//初级代码:
//int main()
//{
//	int a = 1;
//	char* p =(char *) & a;
//	if (*p == 1)
//	{
//		printf("小端");
//	}
//	else
//	{
//		printf("大端");
//	}
//	return 0;
//}

//函数实现:
// Check_sys:返回1--->小端
//           返回0--->大端
//version 1:
//int Check_sys()
//{
//	int a = 1;
//	char* p = (char*)&a;
//	if (*p == 1)
//	{
//		return 1;
//	}
//	else
//		return 0;
//}

//version 2:
//int Check_sys()
//{
//	int a = 1;
//	char* p = (char*)&a;
//	return *p;
//}

//version 3:
//int Check_sys()
//{
//	int a = 1;
//	return * ((char * )&a);//现将a的地址强制转换成(char *)然后解引用只能从低到高访问一个字符(01)
//                                          char*只能访问一个字节
//                          指针类型决定了解引用操作符能够访问几个字节,如char*--->访问一个字节
//                          指针类型决定了指针(+1)or(-1)一次可以跳过几个字节,如int *--->加一or减一可以跳过4个字节
//}
//int main()
//{
//	int ret=Check_sys();
//	if (ret == 1)
//	{
//		printf("小端");
//	}
//	else
//	{
//		printf("大端");
//	}
//	return 0;
//}




//关于 char ,signed char,unsigned char 的整形提升
// 1.
//int main()
//{
//	char a = -1;
//	//-1的补码:11111111111111111111111111111111
//	//存入a中:11111111
//	//有符号的整形提升:11111111111111111111111111111111
//	signed char b = -1;
//	//存入a中:11111111
//	//有符号的整形提升:11111111111111111111111111111111
//	unsigned char c = -1;
//	//存入a中:11111111
//	//无符号的整形提升:00000000000000000000000011111111
//	printf("a=%d\nb=%d\nc=%d\n", a, b, c);
//}
//2.
//int main()
//{
//	char a = -128;
//	//-128的补码:11111111111111111111111110000000
//	//存入a中的为:10000000
//	//有符号的整形提升:11111111111111111111111110000000
//	//%u：打印十进制无符号的整数(原码，反码，补码相同)
//	//11111111111111111111111110000000------十进制:4,294,967,168
//	printf("%u\n", a);
//	//%d--打印十进制有符号的整数
//	//%u--打印十进制无符号的整数
//	char b = 128;//128=127+1而对于char来说128和-128截位后是一样的
//	//127:000000000000000000000000 01111111
//   //plus:000000000000000000000000 00000001
//	//    000000000000000000000000 10000000
//	//截位:10000000(补码)
//	//整形提升11111111111111111111111110000000
//	//%u打印:4,294,967,168
//	printf("%u", b);
//	return 0;
//}


//#include<windows.h>
//int main()
//{
//	unsigned int i;
//	for (i = 9; i >= 0; i--)//无符号的i永远不会小于零----死循环
//		//
//	{
//		printf("%u\n",i);
//		Sleep(100);
//	}
//	return 0;
//}




int main()
{
	float a = 5.5;
	//0101.1
	//1.011*10^2
	//(-1)^0 * 1.011 * 10^2
	//S:0
	//M:1.011
	//E:2+127=129:
	//S:0 E:10000001 M:01100000000000000000000
	//0100 0000 1011 0000 0000 0000 0000 0000
	//  4    0    b   0    0    0    0    0
	//40 b0 00 00
	// 
	// 
	//int b = 9;
	// 9:00000000 00000000 00000000 00001001(整形输入)
	//   0 00000000 00000000000000000001001
	//   S    E              M
	//(-1)^0*0.00000000000000000001001*10^-126(浮点型输出)
	// 
	//printf("%f", b);//整形输入，浮点型输出，结果为：0.000000(趋近于)
	//return 0;
 }

